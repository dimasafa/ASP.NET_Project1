// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NewProj.API.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20231003075807_Adding Images Table")]
    partial class AddingImagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NewProj.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulty");

                    b.HasData(
                        new
                        {
                            Id = new Guid("809e3323-dc8d-4783-9c3a-e828c691639f"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("8da76d4d-e6e1-497c-9df6-e4c945bf3f42"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("5f2b9fde-955f-4459-abbe-115e8e339789"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NewProj.API.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NewProj.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            id = new Guid("e85ad1b8-2369-4d59-a7d9-e828780289a1"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://sportishka.com/uploads/posts/2022-02/1645512205_12-sportishka-com-p-oklend-novaya-zelandiya-turizm-krasivo-fot-14.jpg"
                        },
                        new
                        {
                            id = new Guid("0a6b30a6-dd7a-4a4d-8cfc-3d671c67866b"),
                            Code = "NTL",
                            Name = "Nothland",
                            RegionImageUrl = "https://sportishka.com/uploads/posts/2022-02/1645512331_54-sportishka-com-p-oklend-novaya-zelandiya-turizm-krasivo-fot-59.jpg"
                        },
                        new
                        {
                            id = new Guid("78ae69cc-3d57-4a72-acd8-0128101ec086"),
                            Code = "BOP",
                            Name = "Bay Of Plenty",
                            RegionImageUrl = "https://www.journeysinternational.com/wp-content/uploads/2019/04/bay-of-plenty-aerial.jpg"
                        },
                        new
                        {
                            id = new Guid("440436c3-82c9-45ad-9860-c640ffcd43fa"),
                            Code = "WGN",
                            Name = "Wellington",
                            RegionImageUrl = "https://almode.ru/uploads/posts/2021-04/1618557252_57-p-vellingtoni-68.jpg"
                        },
                        new
                        {
                            id = new Guid("b26c46b4-9961-4f00-9d58-0cf0c3f55a58"),
                            Code = "NSN",
                            Name = "Nielson",
                            RegionImageUrl = "http://i1.wallbox.ru/wallpapers/main2/201726/gorod-stadion-novaa-zelandia-vellington.jpg"
                        },
                        new
                        {
                            id = new Guid("ccd72f74-88dc-4f7e-ab8d-28f6d6fde930"),
                            Code = "STL",
                            Name = "Southland",
                            RegionImageUrl = "https://www.cruisegid.ru/assets/gallery/889/14604.jpg"
                        });
                });

            modelBuilder.Entity("NewProj.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NewProj.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NewProj.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewProj.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
